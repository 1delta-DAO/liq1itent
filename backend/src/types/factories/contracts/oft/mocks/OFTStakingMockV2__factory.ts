/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  OFTStakingMockV2,
  OFTStakingMockV2Interface,
} from "../../../../contracts/oft/mocks/OFTStakingMockV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oft",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "DepositToDstChain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DST_GAS_FOR_CALL",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PT_DEPOSIT_TO_REMOTE_CHAIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_to",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "depositToDstChain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "oft",
    outputs: [
      {
        internalType: "contract IOFTV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_from",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "onOFTReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_to",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "quoteForDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "zroFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "remoteStakingContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "_stakingContract",
        type: "bytes32",
      },
    ],
    name: "setRemoteStakingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060409080825234610206576118d6803803809161001e828561023c565b83396001600160a01b03918291610038919081019061025f565b60008054919092166001600160a01b0319909116811782558351637e062a3560e11b815290926020918281600481885afa9081156101cf5784916101d9575b508551636eb1769f60e11b8152306004820152602481018690529116918082604481865afa9182156101cf57849261019c575b50600019820180921161018857855193808083870163095ea7b360e01b958682528960248a01526044890152604488526100e38861020b565b87519082885af16100f261027e565b81610158575b508061014e575b15610113575b865161152b90816103ab8239f35b6101439561013e9388519384015260248301526044820152604481526101388161020b565b826102d5565b6102d5565b388080808080610105565b50833b15156100ff565b80518015925084908315610170575b505050386100f8565b61018093508201810191016102bd565b388381610167565b634e487b7160e01b84526011600452602484fd5b9080925081813d83116101c8575b6101b4818361023c565b810103126101c4575190386100aa565b8380fd5b503d6101aa565b86513d86823e3d90fd5b6101f99150833d85116101ff575b6101f1818361023c565b81019061025f565b38610077565b503d6101e7565b600080fd5b608081019081106001600160401b0382111761022657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761022657604052565b9081602091031261020657516001600160a01b03811681036102065790565b3d156102b8573d906001600160401b03821161022657604051916102ac601f8201601f19166020018461023c565b82523d6000602084013e565b606090565b90816020910312610206575180151581036102065790565b6000806102fe9260018060a01b03169360208151910182865af16102f761027e565b9083610347565b805190811515918261032c575b50506103145750565b60249060405190635274afe760e01b82526004820152fd5b61033f92506020809183010191016102bd565b15388061030b565b9061036e575080511561035c57805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806103a1575b61037f575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561037756fe6080604052600436101561001257600080fd5b60003560e01c806316c38b3c146100f757806327e235e3146100f25780632e1a7d4d146100ed5780635485ab3c146100e85780635c975abb146100e35780637242abf6146100de5780637fcf35da146100d95780639ae065f1146100d45780639b5215f6146100cf578063aadda7f6146100ca578063acd4b827146100c5578063b6b55f25146100c0578063c86283c8146100bb5763f2ab0e04146100b657600080fd5b610ae1565b610a9b565b61098b565b61094f565b610915565b6108c3565b610872565b6107d2565b61049c565b61045b565b6102fa565b610201565b610198565b61010b565b8015150361010657565b600080fd5b346101065760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010657600435610146816100fc565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600354169115151617600355600080f35b73ffffffffffffffffffffffffffffffffffffffff81160361010657565b346101065760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101065773ffffffffffffffffffffffffffffffffffffffff6004356101e88161017a565b1660005260026020526020604060002054604051908152f35b346101065760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101065761023c336004356110d9565b005b6004359061ffff8216820361010657565b9181601f840112156101065782359167ffffffffffffffff8311610106576020838186019501011161010657565b9060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126101065760043561ffff81168103610106579167ffffffffffffffff9060243582811161010657816102d89160040161024f565b9390939260443592606435918211610106576102f69160040161024f565b9091565b346101065761037961030b3661027d565b909192946103ea61032a8261ffff166000526001602052604060002090565b5492610337841515610b34565b604098899761034d89519a8b9260208401610bd8565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018a5289610700565b6103b461039b60005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b948751988997889687967fa4c51df500000000000000000000000000000000000000000000000000000000885260048801610c6f565b03915afa91821561044b57600091600093610416575b50519081526020810191909152604090f35b0390f35b8161043c92945061041293503d8511610444575b6104348183610700565b810190610bf3565b929091610400565b503d61042a565b610cba565b600091031261010657565b346101065760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010657602060ff600354166040519015158152f35b6104a53661027d565b939290949160046104c48461ffff166000526001602052604060002090565b54966104d1881515610b34565b60009760206104f761039b8b5473ffffffffffffffffffffffffffffffffffffffff1690565b604051948580927ffc0c546a0000000000000000000000000000000000000000000000000000000082525afa801561044b5784610557918b958691610689575b50309073ffffffffffffffffffffffffffffffffffffffff33911661120d565b6105b56040519261059c84610570898c60208401610bd8565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101865285610700565b6105a4610741565b338152998560208c0152369161079b565b60408901526105db61039b845473ffffffffffffffffffffffffffffffffffffffff1690565b90813b156106855784906106206040519a8b95869485947f76203b480000000000000000000000000000000000000000000000000000000086528c3060048801610cdb565b039134905af191821561044b577ff19a8f0b78556c2027690fa47020dd2adb2b807bdf2b287ae4685a7c0adde38a956106669361066c575b506040519485943386610d5a565b0390a180f35b8061067961067f926106e7565b80610450565b38610658565b8380fd5b6106ab915060203d6020116106b1575b6106a38183610700565b810190610cc6565b38610537565b503d610699565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116106fb57604052565b6106b8565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106fb57604052565b604051906060820182811067ffffffffffffffff8211176106fb57604052565b67ffffffffffffffff81116106fb57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9291926107a782610761565b916107b56040519384610700565b829481845281830111610106578281602093846000960137010152565b346101065760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101065761080961023e565b67ffffffffffffffff906024358281116101065761082b90369060040161024f565b5050604435828116036101065760a43591821161010657366023830112156101065761086461023c92369060248160040135910161079b565b906084359060643590610fa3565b346101065760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101065761ffff6108ac61023e565b166000526001602052602435604060002055600080f35b346101065760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010657602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346101065760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010657602060405160018152f35b346101065760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610106576020604051620493e08152f35b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010657600435600460206109de61039b60005473ffffffffffffffffffffffffffffffffffffffff1690565b604051928380927ffc0c546a0000000000000000000000000000000000000000000000000000000082525afa91821561044b57610a62817fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c94610a96946000916106895750309073ffffffffffffffffffffffffffffffffffffffff33911661120d565b336000908152600260205260409020610a7c828254610f91565b905560408051338152602081019290925290918291820190565b0390a1005b346101065760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101065761023c602435610ad98161017a565b6004356110d9565b346101065760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101065761ffff610b1b61023e565b1660005260016020526020604060002054604051908152f35b15610b3b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f696e76616c6964205f647374436861696e4964000000000000000000000000006044820152fd5b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b916040610bf093600181528160208201520191610b99565b90565b9190826040910312610106576020825192015190565b60005b838110610c1c5750506000910152565b8181015183820152602001610c0c565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610c6881518092818752878088019101610c09565b0116010190565b9492610c9c9261ffff610bf09896931687526020870152604086015260e0606086015260e0850190610c2c565b92620493e06080820152600060a082015260c0818503910152610b99565b6040513d6000823e3d90fd5b908160209103126101065751610bf08161017a565b94610d279060609560409561ffff610bf09a9673ffffffffffffffffffffffffffffffffffffffff8097168b521660208a0152868901528688015260e0608088015260e0870190610c2c565b94620493e060a082015260c081870391015280825116855260208201511660208501520151918160408201520190610c2c565b95949361ffff610d979373ffffffffffffffffffffffffffffffffffffffff60609694168952166020880152608060408801526080870191610b99565b930152565b15610da357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f70617573656400000000000000000000000000000000000000000000000000006044820152fd5b15610e0857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f6f6e6c79206f66742063616e2063616c6c206f6e4f465452656365697665642860448201527f29000000000000000000000000000000000000000000000000000000000000006064820152fd5b15610e9357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f696e76616c69642066726f6d00000000000000000000000000000000000000006044820152fd5b919060408382031261010657825160ff81168103610106579260208101519067ffffffffffffffff8211610106570181601f82011215610106578051610f3681610761565b92610f446040519485610700565b8184526020828401011161010657610bf09160208085019101610c09565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908201809211610f9e57565b610f62565b9061100c61101392949394610fc9610fc4610fc060035460ff1690565b1590565b610d9c565b610ff8610ff161039b61039b60005473ffffffffffffffffffffffffffffffffffffffff1690565b3314610e01565b61ffff166000526001602052604060002090565b5414610e8c565b6020810190600160ff8351161460001461107a576110486110416110769360208461106e9551010190610ef1565b905061128b565b73ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b918254610f91565b9055565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f696e76616c6964206465706f73697420747970650000000000000000000000006044820152606490fd5b90816111053373ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b541061010657336000908152600260205260409020918254818103908111610f9e5760049355602061114f61039b60005473ffffffffffffffffffffffffffffffffffffffff1690565b604051948580927ffc0c546a0000000000000000000000000000000000000000000000000000000082525afa92831561044b57816111e99373ffffffffffffffffffffffffffffffffffffffff7f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65966111d1946000916111ee575b50166112fc565b60408051338152602081019290925290918291820190565b0390a1565b611207915060203d6020116106b1576106a38183610700565b386111ca565b9290604051927f23b872dd00000000000000000000000000000000000000000000000000000000602085015273ffffffffffffffffffffffffffffffffffffffff809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff8411176106fb5761128992604052611378565b565b601481511061129e576020015160601c90565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e647300000000000000000000006044820152fd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff9290921660248301526044808301939093529181526112899161135e606483610700565b611378565b908160209103126101065751610bf0816100fc565b60008073ffffffffffffffffffffffffffffffffffffffff6113d093169360208151910182865af13d1561144d573d906113b182610761565b916113bf6040519384610700565b82523d6000602084013e5b83611455565b805190811515918261142f575b50506113e65750565b6040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602490fd5b611446925090602080610fc0938301019101611363565b38806113dd565b6060906113ca565b90611494575080511561146a57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b815115806114ec575b6114a5575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561149d56fea2646970667358221220c12a9b746c8e8465de8d7c8343678e062b9b01296486e648504b0956c3d184f764736f6c63430008190033";

type OFTStakingMockV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OFTStakingMockV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OFTStakingMockV2__factory extends ContractFactory {
  constructor(...args: OFTStakingMockV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oft: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_oft, overrides || {});
  }
  override deploy(
    _oft: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_oft, overrides || {}) as Promise<
      OFTStakingMockV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OFTStakingMockV2__factory {
    return super.connect(runner) as OFTStakingMockV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OFTStakingMockV2Interface {
    return new Interface(_abi) as OFTStakingMockV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OFTStakingMockV2 {
    return new Contract(address, _abi, runner) as unknown as OFTStakingMockV2;
  }
}
