/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockSettlement,
  MockSettlementInterface,
} from "../../../contracts/mock/MockSettlement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ep",
        type: "address",
      },
      {
        internalType: "address",
        name: "d",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "AlreadyFilled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedChainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "providedChainId",
        type: "uint256",
      },
    ],
    name: "BadDestinationChainId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedChainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "providedChainId",
        type: "uint256",
      },
    ],
    name: "BadOriginChainId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "BadSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotMakerOrTaker",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDelegate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "InvalidOrderSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "LzTokenUnavailable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "NoPartialFills",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
    ],
    name: "NoPeer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "NotEnoughNative",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "NotFillable",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTooRelevantRightNow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "OnlyEndpoint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
    ],
    name: "OnlyPeer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "FillingCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "FillingInititated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32",
      },
    ],
    name: "PeerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "SolverPaid",
    type: "event",
  },
  {
    inputs: [],
    name: "REFUND_ADDRESS",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "THIS_CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct Origin",
        name: "origin",
        type: "tuple",
      },
    ],
    name: "allowInitializePath",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "settlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "swapper",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "originChainId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "initiateDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "destinationReceiver",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "destinationSettlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "originToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "originAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "destinationToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "destinationAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderLib.CrossChainOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "endpointOptions",
        type: "bytes",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "settlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "swapper",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "originChainId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "initiateDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "destinationReceiver",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "destinationSettlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "originToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "originAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "destinationToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "destinationAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderLib.CrossChainOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "getOrderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "settlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "swapper",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "originChainId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "initiateDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "destinationReceiver",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "destinationSettlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "originToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "originAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "destinationToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "destinationAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderLib.CrossChainOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "fillerData",
        type: "bytes",
      },
    ],
    name: "initiate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct Origin",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "isComposeMsgSender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes",
      },
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cId",
        type: "uint256",
      },
    ],
    name: "mockSetChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "cId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "eId",
        type: "uint32",
      },
    ],
    name: "mockSetChainIdEidPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oAppVersion",
    outputs: [
      {
        internalType: "uint64",
        name: "senderVersion",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "receiverVersion",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool",
      },
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256",
          },
        ],
        internalType: "struct MessagingFee",
        name: "fee",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "settlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "swapper",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "originChainId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "initiateDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "destinationReceiver",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "destinationSettlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "originToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "originAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "destinationToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "destinationAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderLib.CrossChainOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "fillerData",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "settlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "swapper",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "originChainId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "initiateDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "token",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct OrderLib.Input[]",
            name: "swapperInputs",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "token",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "recipient",
                type: "bytes32",
              },
              {
                internalType: "uint32",
                name: "chainId",
                type: "uint32",
              },
            ],
            internalType: "struct OrderLib.Output[]",
            name: "swapperOutputs",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "token",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "recipient",
                type: "bytes32",
              },
              {
                internalType: "uint32",
                name: "chainId",
                type: "uint32",
              },
            ],
            internalType: "struct OrderLib.Output[]",
            name: "fillerOutputs",
            type: "tuple[]",
          },
        ],
        internalType: "struct OrderLib.ResolvedCrossChainOrder",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_delegate",
        type: "address",
      },
    ],
    name: "setDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32",
      },
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "originAmountReceiver",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "settlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "swapper",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "originChainId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "initiateDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "fillDeadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationChainId",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "destinationReceiver",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "destinationSettlementContract",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "originToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "originAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "destinationToken",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "destinationAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderLib.CrossChainOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "endpointOptions",
        type: "bytes",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "swapper",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifySignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461023f576128569060006001600160401b03601f38859003908101601f19168401908282118583101761022b578085916040978894855283398101031261022757610058602061005185610244565b9401610244565b331561020f5782546001600160a01b03198082163390811786558751919691936001600160a01b03938493919284929183167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08a80a3166080521691821561020057506080511690813b156101fc57839291602484928851958693849263ca5eb5e160e01b845260048401525af180156101f2576101cf575b505046600355608981526006602052828082209161759d63ffffffff199381858254161790556113888083528383206175e590818782541617905561a4b1918285528585209161759e928389825416179055858052868620946175d895868a82541617905586526007602052868620608989825416179055855285852090878254161790558352838320908582541617905581522090815416905533906002541617600255516125fd908161025982396080518181816102e4015281816106ed0152818161095901528181610ab60152818161111701526114090152f35b81116101de57835238806100f1565b634e487b7160e01b82526041600452602482fd5b85513d85823e3d90fd5b8380fd5b632d618d8160e21b8152600490fd5b8451631e4fbdf760e01b815260048101849052602490fd5b5080fd5b634e487b7160e01b84526041600452602484fd5b600080fd5b51906001600160a01b038216820361023f5756fe6080604052600436101561001257600080fd5b60003560e01c806313137d65146101a757806317442b70146101a2578063263f9e401461019d5780632a883d4b146101985780633400288b146101935780635e280f111461018e57806360e65389146101895780636ff1c9bc14610184578063715018a61461017f57806371bd53e51461017a578063782cdfc2146101755780637d25a05e1461017057806382413eac1461016b578063894dfce6146101665780638da5cb5b14610161578063903a6ac01461015c578063b24c4d0c14610157578063bb0b6a5314610152578063ca5eb5e11461014d578063eba0070714610148578063f1ae0e9b14610143578063f2fde38b1461013e578063f35d9ddf14610139578063fac7e2f2146101345763ff7bd03d1461012f57600080fd5b6117f8565b611724565b6115c1565b6114df565b61148d565b6112ed565b6110bd565b611064565b611021565b610ed9565b610e87565b610e46565b610dbd565b610d78565b610d41565b610cad565b610c0d565b610b16565b610ada565b610a6b565b6109cb565b61082e565b61044e565b6103ae565b610254565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126101db57600490565b600080fd5b9181601f840112156101db5782359167ffffffffffffffff83116101db57602083818601950101116101db57565b60a4359073ffffffffffffffffffffffffffffffffffffffff821682036101db57565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101db57565b60e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57610287366101ac565b67ffffffffffffffff6084358181116101db576102a89036906004016101e0565b916102b161020e565b5060c4359081116101db576102ca9036906004016101e0565b50503373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000160361037e5761031a6103158461185c565b611bff565b926020810135809403610333576103319350611cf7565b005b61033d849161185c565b6040517fc26bebcc00000000000000000000000000000000000000000000000000000000815263ffffffff9190911660048201526024810191909152604490fd5b60246040517f91ac5e4f000000000000000000000000000000000000000000000000000000008152336004820152fd5b346101db5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57604080516001815260026020820152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc6101a09101126101db57602490565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6101a09101126101db57600490565b6101e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57610482366103ee565b6101c43567ffffffffffffffff81116101db576104a39036906004016101e0565b916003549160c08201926104c26104b98561185c565b63ffffffff1690565b810361078b575060608201936104d78561185c565b506104e183611f32565b9361052161051a8661050b6104f58561185c565b63ffffffff166000526005602052604060002090565b90600052602052604060002090565b5460ff1690565b15610558576040517faf25cc0e00000000000000000000000000000000000000000000000000000000815260048101869052602490fd5b6106e79592608094926105a26105778861050b6104f561068d9761185c565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055565b6105d673ffffffffffffffffffffffffffffffffffffffff946101808101359060e081013590876101603392013516611fed565b61065b61065161063b604051976106368961060a8d6004359060208401909160609282526020820152600060408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018b528a611204565b61185c565b63ffffffff166000526006602052604060002090565b5463ffffffff1690565b9461066586611bff565b61067c610670611245565b63ffffffff9098168852565b60208701526040860152369161128e565b606083015260008383015260025473ffffffffffffffffffffffffffffffffffffffff16916040518096819482937f2637a45000000000000000000000000000000000000000000000000000000000845260048401611940565b039134907f0000000000000000000000000000000000000000000000000000000000000000165af1908115610786577f6dfef5ecc9f8b6e4ed36b86d653778fabd449d1f9a1585f287d4b44c32bd647b9261075292610757575b506040519081529081906020820190565b0390a1005b6107789060803d60801161077f575b6107708183611204565b81019061188e565b5038610741565b503d610766565b6119d8565b6107948461185c565b6040517f93bbcc4f000000000000000000000000000000000000000000000000000000008152600481019290925263ffffffff166024820152604490fd5b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82016101c081126101db576101a0136101db576004916101a4359067ffffffffffffffff82116101db5761082a916004016101e0565b9091565b610837366107d2565b906003549160c084019261084d6104b98561185c565b810361078b575073ffffffffffffffffffffffffffffffffffffffff9361087b338660e084013516146119e4565b61088481611f32565b9361089861051a8661050b6104f58561185c565b156108cf576040517faf25cc0e00000000000000000000000000000000000000000000000000000000815260048101869052602490fd5b6080936109219361065b61065161063b60606109539b976108fc6105778d61050b6104f561068d9c61185c565b61094d8c6040519b8c9160208301606091815260006020820152600160408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018c528b611204565b0161185c565b039134907f0000000000000000000000000000000000000000000000000000000000000000165af1908115610786577f5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d926107529261075757506040519081529081906020820190565b63ffffffff8116036101db57565b346101db5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db577f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b600435610a27816109bd565b60243590610a33612057565b63ffffffff8116600052600160205281604060002055610752604051928392836020909392919363ffffffff60408201951681520152565b346101db5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101db5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db576020600354604051908152f35b346101db5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db5773ffffffffffffffffffffffffffffffffffffffff610b62610231565b610b6a612057565b1680610b8b5750610331600080808047335af1610b85611a7d565b50611aad565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290602082602481845afa9081156107865761033192600092610bdc575b5033906120a8565b610bff91925060203d602011610c06575b610bf78183611204565b810190611a6e565b9038610bd4565b503d610bed565b346101db576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610caa57610c45612057565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346101db57610cbb366107d2565b505050604051610120810181811067ffffffffffffffff821117610d3c57606091610100916040526000808252806020830152806040830152808483015280608083015260a08201528260c08201528260e0820152015260046040517fd6972c4e000000000000000000000000000000000000000000000000000000008152fd5b61119d565b346101db5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57600435600355005b346101db5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57610db26004356109bd565b602060405160008152f35b346101db5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57610df5366101ac565b5060643567ffffffffffffffff81116101db57610e169036906004016101e0565b505060843573ffffffffffffffffffffffffffffffffffffffff81168091036101db576020906040519030148152f35b346101db5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db576020610e7f61211b565b604051908152f35b346101db5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346101db5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db5760443560043567ffffffffffffffff82116101db576020610f2f60809336906004016101e0565b5060009384917f19457468657265756d205369676e6564204d6573736167653a0a333200000000835284601c52603c832090604051918252803560f81c858301528060010135604083015260210135606082015282805260015afa156107865773ffffffffffffffffffffffffffffffffffffffff80835116908115610fef576024351603610fbc575080f35b6040517f79497cd80000000000000000000000000000000000000000000000000000000081526004810191909152602490fd5b6040517f252d5ca100000000000000000000000000000000000000000000000000000000815260048101849052602490fd5b346101db576101a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db576020610e7f61105f3661041e565b611f32565b346101db5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db5763ffffffff6004356110a4816109bd565b1660005260016020526020604060002054604051908152f35b346101db57600060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610caa576110f6610231565b6110fe612057565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b15611199576024908360405195869485937fca5eb5e10000000000000000000000000000000000000000000000000000000085521660048401525af1801561078657611184575080f35b67ffffffffffffffff8111610d3c5760405280f35b8280fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610d3c57604052565b60a0810190811067ffffffffffffffff821117610d3c57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d3c57604052565b60405190611252826111e8565b565b67ffffffffffffffff8111610d3c57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b92919261129a82611254565b916112a86040519384611204565b8294818452818301116101db578281602093846000960137010152565b9080601f830112156101db578160206112e09335910161128e565b90565b801515036101db57565b346101db5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57600435611328816109bd565b67ffffffffffffffff906024358281116101db5761134a9036906004016112c5565b6044359283116101db576113656113f09336906004016112c5565b916113bc606435611375816112e3565b61137d611bd2565b5061138783611bff565b61139e611392611245565b63ffffffff9095168552565b60208401526040948594858501526060840152608083019015159052565b8151809481927fddc28c58000000000000000000000000000000000000000000000000000000008352309060048401611940565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa9081156107865761145a9260009261145e575b5051918291829190916020806040830194805184520151910152565b0390f35b8161147f9293503d8411611486575b6114778183611204565b810190611beb565b903861143e565b503d61146d565b346101db5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b346101db5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db57611516610231565b61151e612057565b73ffffffffffffffffffffffffffffffffffffffff8091168015611590576000918254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b346101db576101e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db576115fa3661041e565b67ffffffffffffffff6101a4358181116101db5761161c9036906004016101e0565b50906101c4359081116101db576116379036906004016101e0565b50506003546060830163ffffffff8135611650816109bd565b1682036116dd577fb16d90000a14a2470f96083229b2c3aa2d2fe02bf2dfc7be85ed5e9ca9da6460610752856116cd8661168983611f32565b9261169a6020820135928386611b12565b6116a48482612393565b6101408101359173ffffffffffffffffffffffffffffffffffffffff6101203093013516611fed565b6040519081529081906020820190565b6116e69061185c565b6040517f90938d00000000000000000000000000000000000000000000000000000000008152600481019290925263ffffffff166024820152604490fd5b346101db5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db5760043561175f816109bd565b6117f56024359161176f836109bd565b63ffffffff600093818316855260066020526117b981604087209063ffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000825416179055565b1683526007602052604083209063ffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000825416179055565b80f35b346101db5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101db576020611832366101ac565b63ffffffff8135611842816109bd565b166000526001825260406000205482604051920135148152f35b356112e0816109bd565b91908260409103126101db5760405161187e816111cc565b6020808294805184520151910152565b6080818303126101db576040519167ffffffffffffffff6060840181811185821017610d3c5760405282518452602083015190811681036101db5760208401526118da91604001611866565b604082015290565b919082519283825260005b84811061192c5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016118ed565b9073ffffffffffffffffffffffffffffffffffffffff6020919493946040845263ffffffff815116604085015282810151606085015260806119c7611993604084015160a08489015260e08801906118e2565b60608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08883030160a08901526118e2565b910151151560c08501529416910152565b6040513d6000823e3d90fd5b156119eb57565b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4f6e6c79206465737469616e74696f6e2072656365697665722063616e20636160448201527f6e63656c000000000000000000000000000000000000000000000000000000006064820152fd5b908160209103126101db575190565b3d15611aa8573d90611a8e82611254565b91611a9c6040519384611204565b82523d6000602084013e565b606090565b15611ab457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6174697665207472616e73666572206661696c6564000000000000000000006044820152fd5b91602060809160009283917f19457468657265756d205369676e6564204d6573736167653a0a333200000000835286601c52603c832090604051918252803560f81c858301528060010135604083015260210135606082015282805260015afa156107865773ffffffffffffffffffffffffffffffffffffffff80915116918215611ba0571603610fbc5750565b6040517f252d5ca100000000000000000000000000000000000000000000000000000000815260048101859052602490fd5b60405190611bdf826111cc565b60006020838281520152565b906040828203126101db576112e091611866565b63ffffffff16806000526001602052604060002054908115611c1f575090565b602490604051907ff6ff4fb70000000000000000000000000000000000000000000000000000000082526004820152fd5b908160609103126101db578035916040602083013592013560058110156101db5790565b60051115611c7e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90604051611cba816111e8565b809260ff8154166005811015611c7e5760809160049184526001810154602085015260028101546040850152600381015460608501520154910152565b611d53611d4e61065161050b611d16611d2296611d3898810190611c50565b9782999294919761185c565b63ffffffff166000526007602052604060002090565b63ffffffff166000526004602052604060002090565b611cad565b91611d5d81611c74565b80611dbe5750916116cd827f6805e12172d06e924bb30a9e8f3873a9083aab0f336f439ad93c0a396fd1880f946060611db06040611db997015173ffffffffffffffffffffffffffffffffffffffff1690565b920151916120a8565b0390a1565b60019150611dcb81611c74565b14611dd4575050565b7f5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d916116cd82611e1e6040611db995015173ffffffffffffffffffffffffffffffffffffffff1690565b9060606020820151910151916120a8565b60806101509f9d9b9996829f9d9b999590611ee2977fffffffff0000000000000000000000000000000000000000000000000000000092611eb697611f0e9c97875260208701526040860152606085015260e01b1691015260848d01907fffffffff000000000000000000000000000000000000000000000000000000009060e01b169052565b60e01b7fffffffff000000000000000000000000000000000000000000000000000000001660888b0152565b60e01b7fffffffff0000000000000000000000000000000000000000000000000000000016608c890152565b609087015260b086015260d085015260f08401526101108301526101308201520190565b611f3a61211b565b611fe7611f496060840161185c565b92611fbb611f596080830161185c565b611f6560a0840161185c565b90611f7260c0850161185c565b9660405196879560208701809a610180830135966101608401359661014085013596610120860135966101008701359660e0810135966040820135926020830135923591611e2f565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282611204565b51902090565b909261125293604051937f23b872dd00000000000000000000000000000000000000000000000000000000602086015273ffffffffffffffffffffffffffffffffffffffff8092166024860152166044840152606483015260648252612052826111e8565b612485565b73ffffffffffffffffffffffffffffffffffffffff60005416330361207857565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff604051927fa9059cbb000000000000000000000000000000000000000000000000000000006020850152166024830152604482015260448152608081019181831067ffffffffffffffff841117610d3c5761125292604052612485565b6040517f43726f7373436861696e4f726465722800000000000000000000000000000000602082019081527f6279746573333220736574746c656d656e74436f6e747261637400000000000060308301527f6279746573333220737761707065720000000000000000000000000000000000604a8301527f75696e74323536206e6f6e63650000000000000000000000000000000000000060598301527f75696e743332206f726967696e436861696e496400000000000000000000000060668301527f75696e74333220696e697469617465446561646c696e65000000000000000000607a8301527f75696e7433322066696c6c446561646c696e650000000000000000000000000060918301527f75696e7433322064657374696e6174696f6e436861696e49640000000000000060a48301527f627974657333322064657374696e6174696f6e5265636569766572000000000060bd8301527f627974657333322064657374696e6174696f6e536574746c656d656e74436f6e60d88301527f747261637400000000000000000000000000000000000000000000000000000060f88301527f62797465733332206f726967696e546f6b656e0000000000000000000000000060fd8301527f75696e74323536206f726967696e416d6f756e740000000000000000000000006101108301527f627974657333322064657374696e6174696f6e546f6b656e00000000000000006101248301527f75696e743235362064657374696e6174696f6e416d6f756e740000000000000061013c8301527f290000000000000000000000000000000000000000000000000000000000000061015583015290611fe7816101568101611fbb565b919091604051906123a3826111e8565b6003825260208201602082013581526040830161012083013581526060840191610140840135835260c0608086019461018081013586520135966123e6886109bd565b63ffffffff6000981688526004602052604088209088526020526040872094516005811015612458578596975060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004975416911617865551600186015551600285015551600384015551910155565b6024887f4e487b710000000000000000000000000000000000000000000000000000000081526021600452fd5b60008073ffffffffffffffffffffffffffffffffffffffff6124bc93169360208151910182865af16124b5611a7d565b9083612527565b8051908115159182612503575b50506124d25750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b81925090602091810103126101db576020015161251f816112e3565b1538806124c9565b90612566575080511561253c57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b815115806125be575b612577575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561256f56fea264697066735822122050a161754f8a726bf65ef16c95f3c94049418bd5949986d47c58132400e12c6664736f6c63430008190033";

type MockSettlementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSettlementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSettlement__factory extends ContractFactory {
  constructor(...args: MockSettlementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    ep: AddressLike,
    d: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(ep, d, overrides || {});
  }
  override deploy(
    ep: AddressLike,
    d: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(ep, d, overrides || {}) as Promise<
      MockSettlement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockSettlement__factory {
    return super.connect(runner) as MockSettlement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSettlementInterface {
    return new Interface(_abi) as MockSettlementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockSettlement {
    return new Contract(address, _abi, runner) as unknown as MockSettlement;
  }
}
